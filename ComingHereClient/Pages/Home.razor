@page "/"
@using ComingHereClient.Services
@using ComingHereShared.DTO
@using Microsoft.Extensions.Localization
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JS
@inject LocalizationService Loc

<h1>@Loc["Hello"]</h1>

@if (isLoading)
{
    <p class="text-center">Loading...</p>
}
else
{
    <div id="all-events-map" style="height: 500px; width: 100%;"></div>
}

@code {
    private List<EventDto>? activeEvents;
    private bool isLoading = true;
    private bool shouldRenderMap = false;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("AuthorizedClient");

        try
        {
            activeEvents = await client.GetFromJsonAsync<List<EventDto>>("api/event/active");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при загрузке активных событий: {ex.Message}");
            activeEvents = null;
        }

        isLoading = false;
        shouldRenderMap = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (shouldRenderMap && activeEvents != null && activeEvents.Any())
        {
            shouldRenderMap = false;
            await JS.InvokeVoidAsync("renderEventMarkers", "all-events-map", activeEvents);
        }
    }
}