@page "/register"
@using ComingHereShared.DTO
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Nav

<h3>Register</h3>

@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

<div>
    <input @bind="email" placeholder="Email" />
</div>
<div>
    <input type="password" @bind="password" placeholder="Password" />
</div>
<div>
    <input type="password" @bind="confirmPassword" placeholder="Confirm Password" />
</div>
<div>
    <button @onclick="RegisterUser">Register</button>
</div>

@code {
    private string email;
    private string password;
    private string confirmPassword;
    private string message;

    private async Task RegisterUser()
    {
        if (string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(password))
        {
            message = "Email and password are required.";
            return;
        }

        if (password != confirmPassword)
        {
            message = "Passwords do not match.";
            return;
        }

        var registerDto = new RegisterDto { Email = email, Password = password };

        var http = ClientFactory.CreateClient("PublicClient");

        var response = await http.PostAsJsonAsync("api/account/register", registerDto);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<RegisterResult>();
            Nav.NavigateTo($"/confirm?userId={Uri.EscapeDataString(result.UserId)}");
        }
        else
        {
            var errorText = await response.Content.ReadAsStringAsync();
            message = $"Registration failed: {errorText}";
        }
    }
}